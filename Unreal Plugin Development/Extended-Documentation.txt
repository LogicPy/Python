
**Introduction**

1.1 **Purpose of the Documentation**
This documentation serves as a comprehensive guide for users of the GPT-2 NPC conversation plugin designed for Unreal Engine. It provides clear instructions and explanations of all plugin functionalities.

1.2 **Overview of the Plugin**
This plugin facilitates immersive NPC interaction within your game by leveraging the GPT-2 AI model. The plugin uses PyTorch and the transformers Python libraries as back-end technologies. To ensure simplicity and ease of use, these libraries are not required to be installed by the user. Instead, the plugin communicates with a Flask-based server, which handles the GPT-2 AI output and responses.

1.3 **Capabilities of the Plugin**
The plugin empowers users to foster dynamic in-game NPC interactions. NPCs powered by this plugin can exhibit the sophisticated conversational abilities of the GPT-2 AI model, offering an unprecedented level of interaction. Originally developed using OpenAI's GPT-4 AI model, the plugin provides a unique, state-of-the-art communication experience for game developers.

**Installation Guide**

The installation process is straightforward and does not require in-depth technical knowledge:

Step 1: Download the plugin and extract its contents into your Unreal Engine's plugin folder.

Step 2: Load your level blueprint or choose an appropriate blueprint where you want to display your NPC chat window. Create a widget, setting its class to "MyWidget.uasset" (located in the plugin's content folder), and then add it to the viewport. Check out the demonstration image on the download page for a visual guide.

Step 3: If you notice greyed-out nodes when you open "MyWidget.uasset", this means you need to compile the project's public and private source files in Visual Studio 2022. Open Visual Studio, load these source files into your project, and compile. This should resolve any issues with greyed-out nodes.

**Prerequisites**
This plugin was designed with user-friendliness in mind and thus does not require you to install additional third-party software such as Flask, PyTorch, or transformers. However, if you want to experiment with these libraries yourself, you can install PyTorch and transformers using pip in Python, but this is not necessary for the proper operation of the plugin.

---
Getting Started

3.1 Basic setup and configuration of the plugin in an Unreal project

3.2 Setting up and running the Flask server for GPT-2

3.3 Connecting the Flask server to the Unreal plugin

Usage Guide

4.1 Detailed walkthrough of all plugin features and functionalities

4.2 Illustrations and examples of NPC communications using the plugin

4.3 Explanation of any settings or configurations that the user can adjust

Troubleshooting

5.1 Common problems and solutions

5.2 Instructions on where/how to report new issues

FAQs

Frequently Asked Questions and their answers

Conclusion

7.1 Summary of the plugin's benefits

7.2 Contact information for support or feedback

